name: Deploy AWS Resources

on:
  push:
    branches:
      - main  # or any other branch as needed

jobs:
  deploy_s3_buckets:
    runs-on: ubuntu-latest
    outputs: 
      raw_data_bucket_name: ${{ steps.set_output.outputs.raw_data_bucket_name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy S3 Buckets CloudFormation Stacks
        id: s3-buckets
        uses: aws-actions/aws-cloudformation-github-deploy@v1.0.4
        with:
          name: imba-RawDataBucket
          template: cfn/s3.yml
          capabilities: CAPABILITY_IAM

      - name: Set output
        id: set_output
        run: |
          echo "RAW_DATA_BUCKET_NAME=$(aws cloudformation describe-stacks --stack-name imba-RawDataBucket --query "Stacks[0].Outputs[?OutputKey=='RawDataBucketName'].OutputValue" --output text)" >> $GITHUB_ENV

  deploy_lambda_function:
    needs: deploy_s3_buckets  # This ensures that this job runs only after the 'deploy_s3_buckets' job completes successfully
    runs-on: ubuntu-latest
    outputs:
      lambda_function_arn: ${{ steps.fetch_lambda_arn.outputs.lambda_function_arn }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy Lambda Function CloudFormation Stack
        id: lambda-function
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: imba-LambdaFunction
          template: cfn/lambda.yml
          capabilities: CAPABILITY_IAM

      - name: Fetch LambdaFunctionArn
        id: fetch_lambda_arn
        run: |
          LAMBDA_FUNCTION_ARN=$(aws cloudformation describe-stacks --stack-name imba-LambdaFunction --query "Stacks[0].Outputs[?OutputKey=='LambdaFunctionArn'].OutputValue" --output text)
          echo "lambda_function_arn=\"$LAMBDA_FUNCTION_ARN\"" >> $GITHUB_ENV

      - name: Debug Lambda Function ARN
        run: |
          echo "Stored Lambda Function ARN: ${{ steps.fetch_lambda_arn.outputs.lambda_function_arn }}"

  deploy_s3_notifications:
    needs: [deploy_s3_buckets, deploy_lambda_function]  # Ensure this runs after the Lambda function is deployed
    runs-on: ubuntu-latest
    env:
      RAW_DATA_BUCKET_NAME: ${{ needs.deploy_s3_buckets.outputs.raw_data_bucket_name }}
      LAMBDA_FUNCTION_ARN: ${{ needs.deploy_lambda_function.outputs.lambda_function_arn }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Debug Outputs
        run: |
          echo "Raw Data Bucket Name: $RAW_DATA_BUCKET_NAME"
          echo "Lambda Function ARN from previous job: $LAMBDA_FUNCTION_ARN"    

      - name: Set S3 Bucket Notification
        run: |
          aws s3api put-bucket-notification-configuration \
            --bucket $RAW_DATA_BUCKET_NAME \
            --notification-configuration '{
              "LambdaFunctionConfigurations": [
                {
                  "LambdaFunctionArn": $LAMBDA_FUNCTION_ARN,
                  "Events": ["s3:ObjectCreated:*"]
                }
              ]
            }'