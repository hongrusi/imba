AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for S3 buckets and Lambda function setup for object copying.'

Parameters:
  RawDataBucketName:
    Type: String
    Description: Name for the raw data S3 bucket
    Default: imba-rawdata

  ImbaStanleyBucketName:
    Type: String
    Description: Name for the imba-stanley S3 bucket
    Default: imba-stanley

Resources:
  RawDataBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Ref RawDataBucketName
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: 's3:ObjectCreated:*'
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: 'data/'
            Function: !GetAtt CopyObjectFunction.Arn

  ImbaStanleyBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Ref ImbaStanleyBucketName

  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Policies:
        - PolicyName: LambdaS3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 's3:GetObject'
                  - 's3:PutObject'
                Resource:
                  - !GetAtt RawDataBucket.Arn
                  - !Join ['', ['arn:aws:s3:::', !Ref ImbaStanleyBucketName, '/data/*']]

  CopyObjectFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: !Sub '${AWS::StackName}-CopyObjectFunction'
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: python3.8
      Code:
        ZipFile: |
          import boto3
          def handler(event, context):
              s3 = boto3.client('s3')
              for record in event['Records']:
                  source_bucket = record['s3']['bucket']['name']
                  source_key = record['s3']['object']['key']
                  destination_bucket = context.function_name.split('-')[0] + '-imba-stanley'  # Assumes the function name prefix
                  destination_key = 'data/' + source_key.split('/')[-1]
                  s3.copy_object(Bucket=destination_bucket, CopySource={'Bucket': source_bucket, 'Key': source_key}, Key=destination_key)
      Environment:
        Variables:
          DEST_BUCKET: !Ref ImbaStanleyBucketName

Outputs:
  RawDataBucketName:
    Description: 'Name of the raw data S3 bucket'
    Value: !Ref RawDataBucket
  ImbaStanleyBucketName:
    Description: 'Name of the imba-stanley S3 bucket'
    Value: !Ref ImbaStanleyBucket
  LambdaFunctionName:
    Description: 'Name of the Lambda function'
    Value: !Ref CopyObjectFunction
